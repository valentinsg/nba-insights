---
interface Props {
  activeView: string;
}

const { activeView } = Astro.props;
---

<div class="relative w-full max-w-xs mx-auto mb-6">
  <div class="dropdown-container">
    <button
      class="view-selector-btn w-full px-4 py-2 text-left bg-gray-800 rounded-lg flex items-center justify-between"
    >
      <span class="text-white">
        {
          activeView === "teams"
            ? "Equipos"
            : activeView === "conferences"
            ? "Conferencias"
            : "Divisiones"
        }
      </span>
      <span class="text-gray-400">â–¼</span>
    </button>
    <div class="dropdown-menu hidden absolute top-full left-0 w-full mt-2 bg-gray-800 rounded-lg shadow-xl z-10">
      <button data-view="teams" class="w-full px-4 py-2 text-left text-white hover:bg-gray-700 rounded-t-lg">
        Equipos
      </button>
      <button data-view="conferences" class="w-full px-4 py-2 text-left text-white hover:bg-gray-700">
        Conferencias
      </button>
      <button data-view="divisions" class="w-full px-4 py-2 text-left text-white hover:bg-gray-700 rounded-b-lg">
        Divisiones
      </button>
    </div>
  </div>
</div>

<script>
  const viewSelector = document.querySelector('.view-selector-btn');
  const dropdownMenu = document.querySelector('.dropdown-menu');
  const viewButtons = document.querySelectorAll('[data-view]');

  viewSelector?.addEventListener('click', () => {
    dropdownMenu?.classList.toggle('hidden');
  });

  viewButtons.forEach(button => {
    button.addEventListener('click', () => {
      const view = button.getAttribute('data-view');
      const currentUrl = new URL(window.location.href);
      currentUrl.searchParams.set('view', view || 'teams');
      window.location.href = currentUrl.toString();
      dropdownMenu?.classList.add('hidden');
    });
  });

  // Cerrar dropdown al hacer click fuera
  document.addEventListener('click', (e) => {
    if (!viewSelector?.contains(e.target as Node)) {
      dropdownMenu?.classList.add('hidden');
    }
  });
</script>