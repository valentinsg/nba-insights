---
import ViewSelector from '../components/ViewSelector.astro';
import TeamCard from '../components/TeamCard.astro';
import ConferenceView from './ConferenceView.astro';
import DivisionCard from '../components/DivisionView.astro';
import { teams } from '../data/teams';
import type { Team } from '../types/Team';
import TeamBento from './TeamBento.astro';

// Obtener la vista actual desde los parÃ¡metros de URL o usar 'teams' por defecto
const currentView = Astro.url.searchParams.get('view') || 'teams';

// Preparar datos necesarios
const conferences = [...new Set(teams.map((team) => team.conference))];
const divisions = [...new Set(teams.map((team) => team.division))];

const teamsByConference = conferences.reduce(
  (acc, conf) => {
    acc[conf] = teams.filter((team) => team.conference === conf);
    return acc;
  },
  {} as Record<string, Team[]>
);

const teamsByDivision = divisions.reduce(
  (acc, div) => {
    acc[div] = teams.filter((team) => team.division === div);
    return acc;
  },
  {} as Record<string, Team[]>
);
---

<div class="min-h-screen bg-gray-900">
  <ViewSelector activeView={currentView} />

  {currentView === 'teams' && (
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 p-6">
      {teams.map((team) => (
        <TeamBento />
      ))}
    </div>
  )}

  {currentView === 'conferences' && (
    <div class="p-6 space-y-6">
      {conferences.map((conference) => (
        <ConferenceView
          conference={conference}
          teams={teamsByConference[conference]}
        />
      ))}
    </div>
  )}

  {currentView === 'divisions' && (
    <div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6 p-6">
      {divisions.map((division) => (
        <DivisionCard
          division={division}
          teams={teamsByDivision[division]}
        />
      ))}
    </div>
  )}
</div>